<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MWActivity.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MWActivity</TokenIdentifier>
			<Abstract type="html">A subclass of UIActivity that presents a single third-party application capable of opening a given URL scheme or set of URL schemes.</Abstract>
			<DeclaredIn>MWActivity.h</DeclaredIn>
            
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MWActivity/setName:</TokenIdentifier>
			<Abstract type="html">The name of the app, to be displayed as the UIActivity activityTitle field.</Abstract>
			<DeclaredIn>MWActivity.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MWActivity/name</TokenIdentifier>
			<Abstract type="html">The name of the app, to be displayed as the UIActivity activityTitle field.</Abstract>
			<DeclaredIn>MWActivity.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MWActivity/name</TokenIdentifier>
			<Abstract type="html">The name of the app, to be displayed as the UIActivity activityTitle field.</Abstract>
			<DeclaredIn>MWActivity.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MWActivity/setDict:</TokenIdentifier>
			<Abstract type="html">A dictionary of URL schemes an application responds to. The keys are command names, and the arguments are handlebar-templated strings that can be used to construct a valid URL.</Abstract>
			<DeclaredIn>MWActivity.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSDictionary *dict</Declaration>
			
			
			<Anchor>//api/name/dict</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MWActivity/dict</TokenIdentifier>
			<Abstract type="html">A dictionary of URL schemes an application responds to. The keys are command names, and the arguments are handlebar-templated strings that can be used to construct a valid URL.</Abstract>
			<DeclaredIn>MWActivity.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSDictionary *dict</Declaration>
			
			
			<Anchor>//api/name/dict</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MWActivity/dict</TokenIdentifier>
			<Abstract type="html">A dictionary of URL schemes an application responds to. The keys are command names, and the arguments are handlebar-templated strings that can be used to construct a valid URL.</Abstract>
			<DeclaredIn>MWActivity.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSDictionary *dict</Declaration>
			
			
			<Anchor>//api/name/dict</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MWActivity/initWithDictionary:name:application:</TokenIdentifier>
			<Abstract type="html">Returns an intialized MWActivity object.</Abstract>
			<DeclaredIn>MWActivity.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithDictionary:(NSDictionary *)dict name:(NSString *)name application:(UIApplication *)application</Declaration>
			<Parameters>
				<Parameter>
					<Name>dict</Name>
					<Abstract type="html">The dictionary mapping commands to valid URL schemes for the third-party application.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the third-party application.</Abstract>
				</Parameter><Parameter>
					<Name>application</Name>
					<Abstract type="html">The UIApplication to use when calling [UIApplication openURL:] and [UIApplication canOpenURL:]. You probably want this to be [UIApplication sharedApplication], but it is injected here for test purposes.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">an initialized MWActivity object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithDictionary:name:application:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MWActivity/canPerformCommand:</TokenIdentifier>
			<Abstract type="html">Checks whether or not the third-party app can accept a custom URL corresponding to a given command</Abstract>
			<DeclaredIn>MWActivity.h</DeclaredIn>
			
			<Declaration>- (BOOL)canPerformCommand:(NSString *)command</Declaration>
			<Parameters>
				<Parameter>
					<Name>command</Name>
					<Abstract type="html">A command to perform. If the third-party app knows how to perform this command, it should have a corresponding key in the activity&apos;s dict property.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the third-party app responds to a custom URL scheme to perform the corresponding command.</Abstract></ReturnValue>
			<Anchor>//api/name/canPerformCommand:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
        
	</File>
</Tokens>